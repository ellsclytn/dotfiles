[user]
  name = Ellis Clayton
  email = ellis@ellis.codes
  signingkey = 0xDEF7E66A739ACB11
[push]
  default = simple
  autoSetupRemote = true
  followTags = true
[init]
  defaultBranch = main
[alias]
  # https://gist.github.com/mwhite/6887990
  a = add
  ap = add -p
  b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"
  c = commit --verbose
  ca = commit --amend
  can = commit --amend --no-edit
  cm = commit -m
  cmb = "!git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done"
  sb = switch
  cob = switch -c
  cp = cherry-pick
  d = diff
  dbi = !fzf-delete-branches
  dc = diff --cached
  ds = diff --staged
  f = fetch
  ffm = merge --ff-only
  fix = "!$EDITOR `git diff --name-only | uniq`"
  fu = commit --fixup
  ful = "!git log origin/HEAD..HEAD --pretty=format:'%h %s' --no-merges | fzf | cut -c -7 | xargs -o git commit --fixup"
  hard-pull = "!git fetch origin $(git rev-parse --abbrev-ref HEAD) && git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)"
  la = "!git config -l | grep alias | cut -c 7-"
  lb = lg origin/HEAD..HEAD
  lg = log --pretty=format:"%C(yellow)%h\\ %C(red)%ad%Cred\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --no-merges
  m = commit --amend --verbose
  p = push
  ras = rebase -i
  rasm = rebase -i origin/HEAD
  re = restore
  ref = rev-parse
  s = status -s
  sh = show
[core]
  excludesfile = ~/.dotfiles/config/git/gitignore
  pager = delta
[interactive]
  diffFilter = delta --color-only
[log]
  mailmap = true
[commit]
  template = ~/.dotfiles/config/git/commitmessage
  gpgsign = true
  verbose = true
[diff]
  colorMoved = default
[diff "gpg"]
  textconv = gpg --quiet --no-tty --decrypt
[pull]
  ff = only
[merge]
  conflictstyle = diff3
[rebase]
  autosquash = true
  autostash = true
[fetch]
  prune = true
[delta]
  navigate = true
  light = false
[rerere]
  enabled = true
  autoupdate = true

# Repositories to run regular maintenance on can be defined in ~/.gitconfig_local
# Example:
#
# [maintenance]
#   repo = /home/ellis/Code/my-repo
[maintenance "prefetch"]
  enabled = false
[include]
  path = ~/.gitconfig_local
